import { Scene } from "phaser";

import { GAME_SCENE, TILES } from "../constants";

export class Game extends Scene {
  constructor() {
    super({ key: GAME_SCENE });
  }

  create() {
    // prettier-ignore
    // const level = [
    //   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    //   [1, 1, 0, 0, 0, 1, 1, 1, 1, 1],
    //   [1, 1, 1, 0, 0, 0, 1, 1, 0, 1],
    //   [1, 1, 1, 1, 0, 0, 0, 0, 0, 1],
    //   [1, 0, 1, 1, 1, 0, 0, 0, 0, 1],
    //   [1, 0, 1, 1, 1, 0, 0, 0, 0, 1],
    //   [1, 0, 0, 1, 1, 0, 0, 0, 1, 1],
    //   [1, 0, 0, 1, 0, 0, 0, 1, 1, 1],
    //   [1, 0, 0, 0, 0, 0, 1, 1, 1, 1],
    //   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    //   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    //   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    //   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    //   [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    // ];

    // prettier-ignore
    let remappedLevel = [
      [75, 75, 74, 74, 74, 74, 74, 74, 60, 74, 74, 74, 15, 74, 74, 74, 74, 74, 74, 15, 15, 60, 60, 15, 61, 61, 61, 61, 61, 61, 61, 61, 61, 60, 60],
      [75, 75, 74, 74, 74, 76, 76, 15, 60, 60, 15, 15, 15, 60, 15, 60, 60, 60, 60, 60, 60, 60, 60, 60, 74, 74, 15, 61, 61, 61, 61, 61, 15, 60, 60],
      [75, 75, 74, 76, 76, 76, 15, 61, 15, 15, 74, 74, 15, 74, 15, 15, 15, 15, 15, 15, 74, 15, 15, 60, 60, 15, 15, 15, 61, 61, 61, 61, 61, 15, 60],
      [75, 75, 76, 15, 61, 15, 61, 61, 60, 15, 15, 15, 60, 15, 74, 15, 74, 15, 74, 74, 15, 15, 74, 15, 60, 60, 74, 74, 15, 61, 61, 61, 61, 61, 60],
      [75, 75, 76, 60, 15, 109, 110, 110, 111, 15, 61, 109, 110, 111, 15, 74, 74, 74, 74, 15, 60, 61, 74, 74, 74, 60, 60, 74, 74, 15, 61, 61, 61, 61, 60],
      [75, 75, 15, 15, 60, 123, 124, 124, 124, 110, 110, 124, 124, 124, 111, 15, 74, 74, 15, 109, 110, 110, 111, 15, 60, 15, 60, 15, 15, 74, 74, 74, 15, 61, 15],
      [75, 75, 60, 60, 15, 123, 124, 124, 124, 124, 124, 124, 124, 124, 124, 110, 110, 110, 110, 124, 124, 124, 124, 111, 15, 61, 60, 74, 74, 15, 74, 74, 15, 61, 61],
      [75, 75, 61, 61, 61, 123, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 111, 15, 60, 60, 74, 15, 74, 15, 74, 15, 15],
      [75, 75, 15, 61, 15, 123, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 111, 61, 60, 15, 18, 15, 74, 74, 74, 74],
      [75, 75, 61, 61, 61, 137, 138, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 111, 60, 61, 15, 15, 74, 15, 15, 74],
      [75, 75, 15, 61, 61, 61, 61, 123, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 111, 61, 61, 15, 74, 74, 74, 74],
      [75, 75, 15, 61, 61, 61, 109, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 125, 15, 61, 15, 15, 74, 15, 15],
      [75, 15, 61, 61, 15, 15, 123, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 138, 139, 60, 15, 74, 74, 74, 74, 74],
      [75, 61, 61, 61, 61, 60, 137, 138, 138, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 125, 15, 60, 60, 60, 74, 74, 15, 74, 74],
      [75, 61, 60, 15, 61, 61, 15, 15, 60, 137, 138, 138, 138, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 138, 139, 61, 61, 74, 60, 60, 74, 74, 74, 15],
      [61, 61, 60, 61, 15, 15, 61, 61, 15, 15, 60, 15, 76, 123, 124, 124, 124, 124, 124, 124, 124, 124, 124, 125, 60, 60, 15, 15, 74, 74, 60, 74, 74, 74, 15],
      [61, 61, 60, 61, 61, 75, 15, 15, 75, 75, 15, 76, 15, 137, 138, 124, 124, 124, 124, 124, 124, 124, 124, 125, 15, 61, 61, 136, 15, 74, 60, 74, 74, 15, 60],
      [61, 61, 15, 15, 61, 0, 1, 1, 1, 3, 15, 60, 15, 15, 76, 137, 124, 124, 124, 138, 138, 138, 138, 139, 60, 15, 15, 75, 75, 74, 60, 74, 74, 74, 60],
      [61, 61, 74, 74, 15, 14, 15, 15, 46, 17, 60, 60, 60, 60, 15, 15, 123, 124, 125, 15, 76, 60, 60, 15, 61, 15, 75, 75, 60, 60, 60, 74, 74, 15, 60],
      [61, 61, 15, 74, 74, 14, 51, 15, 15, 17, 60, 76, 75, 15, 15, 60, 137, 138, 139, 60, 15, 61, 15, 60, 75, 75, 60, 60, 60, 74, 74, 74, 74, 74, 60],
      [61, 15, 60, 74, 74, 14, 15, 15, 15, 17, 60, 76, 106, 75, 95, 15, 61, 15, 61, 61, 61, 15, 75, 75, 75, 60, 60, 75, 74, 74, 74, 15, 60, 60, 60],
      [61, 61, 60, 74, 74, 28, 1, 32, 1, 31, 60, 106, 15, 76, 76, 15, 61, 61, 61, 61, 61, 15, 75, 75, 75, 60, 75, 75, 75, 15, 60, 60, 60, 60, 60],
      [61, 61, 60, 15, 15, 74, 74, 60, 60, 60, 60, 60, 60, 106, 76, 15, 75, 15, 61, 61, 15, 15, 75, 75, 60, 60, 75, 75, 75, 60, 60, 60, 60, 60, 60],
      [61, 61, 15, 18, 15, 74, 74, 74, 74, 74, 74, 74, 74, 60, 76, 76, 15, 61, 61, 15, 75, 75, 75, 75, 60, 75, 76, 15, 15, 60, 60, 60, 60, 60, 15],
      [61, 61, 61, 61, 61, 15, 74, 74, 74, 74, 74, 15, 15, 60, 60, 15, 15, 15, 15, 15, 15, 76, 76, 60, 60, 76, 76, 15, 60, 60, 60, 60, 60, 60, 60],
      [61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 15, 60, 60, 60, 60, 60, 60, 15, 18, 15, 15, 75, 76, 60, 76, 76, 76, 60, 60, 60, 60, 60, 60, 60, 60],
      [61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 76, 15, 15, 60, 60, 15, 60, 60, 60, 60, 60],
    ];

    // const wall = 74;
    // const floor = 15;
    // const remappedLevel = level.map((r) =>
    //   r.map((t) => (t === 1 ? wall : floor))
    // );

    const tileSize = 8;

    const map = this.make.tilemap({
      data: remappedLevel,
      tileWidth: tileSize * 2,
      tileHeight: tileSize * 2,
      width: 35,
      height: 27,
    });
    const tileset = map.addTilesetImage(
      TILES,
      undefined,
      tileSize,
      tileSize,
      0,
      1
    );

    map.createLayer(0, tileset, 0, 0);
  }
}
